# =====================================
# NetGuard Application Configuration
# =====================================

spring.application.name=NetGuard

# =====================================
# Server Configuration
# =====================================
server.port=8080
server.error.include-message=always
server.error.include-binding-errors=always

# =====================================
# Database Configuration - PostgreSQL
# =====================================
spring.datasource.url=jdbc:postgresql://localhost:5432/NetGurd
spring.datasource.username=postgres
# SECURED: Use environment variable for database password
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# =====================================
# JPA/Hibernate Configuration
# =====================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.open-in-view=false

# =====================================
# Security Configuration
# =====================================

# JWT Configuration - SECURED
# SECURED: Use environment variable for JWT secret
jwt.secret=${JWT_SECRET:NetGuardDefaultSecretKeyForDevelopmentOnly}
jwt.expiration=86400000

# Application Security Settings
app.security.max-login-attempts=5
app.security.account-lockout-duration-minutes=30
app.security.rate-limit-window-minutes=15

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000,http://localhost:3001

# =====================================
# Authentication & Registration
# =====================================
app.registration.require-email-verification=false
app.frontend.base-url=http://localhost:3000

# =====================================
# Email Configuration - SECURED
# =====================================

# Email Service Settings - ENABLE EMAIL
app.email.enabled=true
app.email.from=noreply@netguard.com

# SMTP Configuration - SECURED VERSION
spring.mail.host=smtp.gmail.com
spring.mail.port=587
# SECURED: Use environment variable for email username
spring.mail.username=${EMAIL_USERNAME:sfms0674@gmail.com}
# SECURED: Use environment variable for email password
spring.mail.password=${EMAIL_PASSWORD:}
spring.mail.protocol=smtp
spring.mail.default-encoding=UTF-8

# Essential SMTP Properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Connection and timeout settings
spring.mail.properties.mail.smtp.connectiontimeout=10000
spring.mail.properties.mail.smtp.timeout=10000
spring.mail.properties.mail.smtp.writetimeout=10000

# CRITICAL: Enable debug logging for email troubleshooting
spring.mail.properties.mail.debug=true
spring.mail.test-connection=false

# =====================================
# Enhanced Logging for Email Debugging
# =====================================
logging.level.org.springframework.mail=DEBUG
logging.level.javax.mail=DEBUG
logging.level.com.sun.mail=DEBUG
logging.level.NetGuard.Login_Backend.Service.EmailService=DEBUG
logging.level.org.springframework.mail.javamail=DEBUG

# Add this to see actual email sending attempts
logging.level.root=INFO

# =====================================
# File Upload Configuration
# =====================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# =====================================
# Development Tools Configuration
# =====================================
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=true

# =====================================
# Logging Configuration
# =====================================
logging.level.HCI.Project.NetGuard=DEBUG
logging.level.NetGuard.Login_Backend=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Log file configuration
logging.file.name=logs/netguard.log
logging.file.max-size=10MB
logging.file.max-history=30

# =====================================
# Actuator Configuration
# =====================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# =====================================
# Scheduling Configuration
# =====================================
spring.task.scheduling.pool.size=5

# =====================================
# Jackson Configuration
# =====================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.default-property-inclusion=NON_NULL

# =====================================
# Application Information
# =====================================
info.app.name=NetGuard
info.app.description=Smart Parental Internet Control System
info.app.version=1.0.0
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# =====================================
# Cache Configuration
# =====================================
spring.cache.type=simple

# =====================================
# Profile-Specific Configuration
# =====================================
# Use spring.profiles.active to switch between environments
# Development: no profile needed (uses defaults above)
# Production: set spring.profiles.active=prod
# Testing: set spring.profiles.active=test

# =====================================
# Google OAuth2 Configuration - SECURED
# =====================================

# Google OAuth2 Client Registration - SECURED
# SECURED: Use environment variables for OAuth credentials
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_OAUTH_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_OAUTH_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

# Google OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
# FIX: Change from 'id' to 'sub' - this is the standard Google user identifier
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# OAuth2 Settings
app.oauth2.authorized-redirect-uris=http://localhost:3000/dashboard
app.oauth2.default-password-length=6

# =====================================
# Dashboard Backend Specific Configuration
# =====================================

# Dashboard CORS Configuration (more specific)
app.dashboard.cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000
app.dashboard.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD
app.dashboard.cors.allowed-headers=*
app.dashboard.cors.allow-credentials=true
app.dashboard.cors.max-age=3600

# Dashboard JWT Configuration (uses same JWT settings but with dashboard scope)
app.dashboard.jwt.secret=${jwt.secret}
app.dashboard.jwt.expiration=${jwt.expiration}

# Async Configuration for Dashboard Services
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=8
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=dashboard-async-

# Network Monitoring Configuration
app.dashboard.network.scan-interval=30000
app.dashboard.network.connection-timeout=15000
app.dashboard.network.max-scan-attempts=3

# Dashboard Analytics Configuration
app.dashboard.analytics.retention-days=30
app.dashboard.analytics.max-history-entries=1000

# Dashboard Security Configuration
app.dashboard.security.require-authentication=true
app.dashboard.security.session-timeout=1800

# Additional logging for Dashboard components
logging.level.NetGuard.Dashboard_Features_Backend=DEBUG
logging.level.NetGuard.Dashboard_Features_Backend.Controller=INFO
logging.level.NetGuard.Dashboard_Features_Backend.Service=DEBUG
logging.level.NetGuard.Dashboard_Features_Backend.Security=DEBUG